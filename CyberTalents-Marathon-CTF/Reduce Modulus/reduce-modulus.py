from Crypto.Util.number import *

c = 493411990714034701192036868925033382533813449023272468886834417275865894890277610897602010608126211732489729110637453412478527735277532858305194132432995412335314758844973458067236971260497417393244304994147175160121126866274637094642084286422204250530071767179407437175780827344723433812174890560874797281085881372866235919836442489439131953350250339903321616150128653702980111364606793773693115742802148096105255600570826866081538329662788508308910574300106675
n1 = 58899560795422629508383709585815596674993413635981165980320127271644038316448725758306722451998784991954419091526089159750869500335163383766827243981828688851948124591111627934859094536105678156714083380927689539385480719433890644570016706624506640312364077682372260047937960244512523766943378334280751887151
n2 = 10035997187541816220681016469393172095726015614633459513695480820099536637633364416223346540578858375371324216891862234038678667156169323844411428795236483
q1 = 97376413457495379727538733988115472170316568275353708109214217512313027597677
p1 = 103063943630687425230399745410466615279125356292442540958979279268474247260079
r1 = 5868829942333741533880409398990244343870920499661847816940231710761952732286819725819022038868194875443763043775871130747678069401049126641963650974100197

q2 = 97376413457495379727538733988115472170316568275353708109214217512313027597677
p2 = 103063943630687425230399745410466615279125356292442540958979279268474247260079

e = 65537

#n = n1*n2

phi = (p2 - 1) * (q2 - 1) 
#phi = (p1 - 1) * (q1 - 1) * (r1 - 1) * (p2 - 1) * (q2 - 1) also worked

d = inverse(e, phi)

flag = pow(c,d,n2)
print(long_to_bytes(flag).decode())





